{"version":3,"sources":["assets\\InfiniteHeights\\scripts\\Game\\InfiniteHeights.GameView.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport GameManager from \"../InfiniteHeights.GameManager\";\r\nimport { Global } from \"../InfiniteHeights.Global\";\r\nimport BackGround from \"./InfiniteHeights.BackGround\";\r\nimport Ballon from \"./InfiniteHeights.Ballon\";\r\nimport GameOver from \"./InfiniteHeights.GameOver\";\r\nimport obstacleManager from \"./InfiniteHeights.ObstacleManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class GameView extends cc.Component {\r\n\r\n    public static instance: GameView = null;\r\n    @property(cc.Node)\r\n    nObstacle: cc.Node = null;\r\n    // @property(cc.Node)\r\n    // nObstacle_2: cc.Node = null;\r\n    @property(cc.Prefab)\r\n    listPrfObstacle: cc.Prefab[] = [];\r\n    @property(cc.Prefab)\r\n    prfBackGround: cc.Prefab = null;\r\n    @property(cc.Node)\r\n    nBgGame: cc.Node = null;\r\n    @property(cc.Prefab)\r\n    prfBallon: cc.Prefab = null;\r\n    @property(cc.Node)\r\n    nBallon: cc.Node = null;\r\n    @property(cc.Node)\r\n    listBg: cc.Node[] = [];\r\n\r\n    @property(cc.Label)\r\n    lbDiamond: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    lbTime: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    lbScore: cc.Label = null;\r\n    @property(cc.Prefab)\r\n    prfGameOver: cc.Prefab = null;\r\n    time = 0;\r\n    isFirstTouch = false;\r\n    isGameOver = false;\r\n    ballon = null;\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n\r\n        GameView.instance = this;\r\n        //this.createObstacle();\r\n        //this.genObstacle_2();\r\n        Global.unlockIndexBallon = JSON.parse(cc.sys.localStorage.getItem('unlockIndexBallon')) || Global.unlockIndexBallon;\r\n        console.log(\"index \", Global.unlockIndexBallon);\r\n        Global.currentIndexBallon = JSON.parse(cc.sys.localStorage.getItem('currentIndexBallon')) || 0 ;\r\n        this.ballon = cc.instantiate(this.prfBallon).getComponent(Ballon)\r\n        this.ballon.node.y = -500;\r\n        this.ballon.setData(Global.currentIndexBallon)\r\n        this.nBallon.addChild(this.ballon.node);\r\n        this.genObstacle();\r\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\r\n       \r\n        this.resetGame();\r\n\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    createObstacle(node: cc.Node) {\r\n\r\n        for (let i = 0; i < 2; i++) {\r\n            let index = Math.floor(Math.random() * this.listPrfObstacle.length);\r\n            let obstacle = cc.instantiate(this.listPrfObstacle[index]);\r\n            let obstacleComponent = obstacle.getComponent(obstacleManager);\r\n            if (obstacleComponent) {\r\n                obstacle = obstacleComponent.node;\r\n            }\r\n            obstacle.y = -340 + i * 680;\r\n            node.addChild(obstacle);\r\n        }\r\n    }\r\n\r\n    genObstacle() {\r\n        for (let i = 0; i < 3; i++) {\r\n            this.createObstacle(this.listBg[i]);\r\n        }\r\n    }\r\n    onTouchStart() {\r\n        this.startGame();\r\n    }\r\n\r\n    startGame() {\r\n        if (!this.isFirstTouch) {\r\n            this.isFirstTouch = true;\r\n            this.schedule(this.updateTime, 1);\r\n        } else {\r\n            this.fall();\r\n\r\n        }\r\n    }\r\n\r\n    fall() {\r\n        // this.ballon.setPosition(this.ballon.position.x, this.ballon.position.y - 80,0);\r\n        if (this.isGameOver) return;\r\n        cc.tween(this.ballon.node)\r\n            .by(0.2, { y: -80 })\r\n            .start();\r\n    }\r\n\r\n\r\n    updateTime() {\r\n        if (this.isFirstTouch && !this.isGameOver) {\r\n            this.time += 1;\r\n            this.updateLbTime(this.lbTime);\r\n            this.updateLbScore(this.lbScore);\r\n        }\r\n    }\r\n    updateLbDiamond(lbDiamond) {\r\n        //if (this.isGameOver) return;\r\n        lbDiamond.string = Global.diaMond + ' ';\r\n        this.updateLbScore(this.lbScore);\r\n    }\r\n\r\n    updateLbTime(lbTime: cc.Label) {\r\n        lbTime.string = this.time + ' ';\r\n    }\r\n\r\n    updateLbScore(lbScore: cc.Label) {\r\n        lbScore.string = this.time + Global.diaMond + ' ';\r\n    }\r\n\r\n    resetGame() {\r\n        Global.diaMond = 0;\r\n        Global.score = 0;\r\n        this.time = 0;\r\n        this.updateLbScore(this.lbScore);\r\n        this.updateLbTime(this.lbTime);\r\n        this.updateLbDiamond(this.lbDiamond);\r\n        this.ballon.node.y = -500;\r\n        cc.director.getCollisionManager().enabled = true;\r\n        this.isFirstTouch = false;\r\n        this.isGameOver = false;\r\n        this.listBg.forEach(value => {\r\n            value.removeAllChildren();\r\n        })\r\n        this.listBg[0].y = 3120;\r\n        this.listBg[1].y = 1840;\r\n        this.listBg[2].y = 560;\r\n        this.listBg[3].y = -720;\r\n        this.listBg[3].active = true;\r\n        this.genObstacle();\r\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\r\n    }\r\n\r\n    gameOver() {\r\n        this.isGameOver = true;\r\n        let gameOver = cc.instantiate(this.prfGameOver).getComponent(GameOver).node\r\n        this.node.addChild(gameOver);\r\n        this.unschedule(this.updateTime);\r\n        cc.tween(this.ballon).stop();\r\n        this.node.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\r\n        cc.director.getCollisionManager().enabled = false;\r\n        let scores = this.time + Global.diaMond;\r\n        Global.dataScore.push(scores);\r\n        Global.dataScore.sort((a, b) => {\r\n            return a > b ? - 1 : 0;\r\n        });\r\n        console.log('save', Global.dataScore)\r\n        cc.sys.localStorage.setItem('scores', JSON.stringify(Global.dataScore));\r\n\r\n        if (scores >= Global.unlockPoints[Global.unlockIndexBallon + 1]) {\r\n            Global.unlockIndexBallon++;\r\n            cc.sys.localStorage.setItem('unlockIndexBallon', Global.unlockIndexBallon);\r\n            console.log(\"unLockIndex \", Global.unlockIndexBallon);\r\n        }\r\n\r\n\r\n\r\n        //Global.ballon.forEach()\r\n    }\r\n\r\n    // checkAndUnlockBalloons(scores: number) {\r\n    //     for (let i = Global.currentIndex; i < Global.dataBallon.length; i++) {\r\n    //         if (scores >= Global.dataBallon[i].score && !Global.dataBallon[i].isUnlock) {\r\n    //             Global.dataBallon[i].isUnlock = true;\r\n    //             Global.currentIndex = i + 1;\r\n    //             cc.sys.localStorage.setItem('dataBallon', JSON.stringify(Global.dataBallon));\r\n    //             cc.sys.localStorage.setItem('currentIndex', Global.currentIndex.toString());\r\n    //             break;\r\n    //         }\r\n    //     }\r\n    // }\r\n    gameDestroy() {\r\n        this.node.destroy();\r\n    }\r\n    update(dt) {\r\n\r\n        if (this.isGameOver) return;\r\n\r\n\r\n        if (this.isFirstTouch) {\r\n            this.ballon.node.setPosition(this.ballon.node.position.x, this.ballon.node.position.y + 180 * dt, 0);\r\n        }\r\n    }\r\n    // genBackGround() {\r\n    //     console.log(\"sadasd\");\r\n    //     let bg = cc.instantiate(this.prfBackGround).getComponent(BackGround).node\r\n    //     bg.y = 1900;\r\n\r\n    //     this.nBgGame.addChild(bg);\r\n\r\n    // }\r\n}\r\n"]}