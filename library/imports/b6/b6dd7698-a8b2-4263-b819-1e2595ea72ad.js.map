{"version":3,"sources":["assets/InfiniteHeights/scripts/Game/InfiniteHeights.GameView.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport BackGround from \"./InfiniteHeights.BackGround\";\nimport Ballon from \"./InfiniteHeights.Ballon\";\nimport obstacleManager from \"./InfiniteHeights.ObstacleManager\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class GameView extends cc.Component {\n\n    public static instance: GameView = null;\n    @property(cc.Node)\n    nObstacle: cc.Node = null;\n    // @property(cc.Node)\n    // nObstacle_2: cc.Node = null;\n    @property(cc.Prefab)\n    listPrfObstacle: cc.Prefab[] = [];\n    @property(cc.Prefab)\n    prfBackGround: cc.Prefab = null;\n    @property(cc.Node)\n    nBgGame: cc.Node = null;\n    @property(cc.Prefab)\n    prfBallon: cc.Prefab = null;\n    @property(cc.Node)\n    nBallon: cc.Node = null;\n    @property(cc.Node)\n    listBg: cc.Node[] = [];\n    isFirstTouch = false;\n    ballon = null;\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n        \n        GameView.instance = this;\n        //this.createObstacle();\n        //this.genObstacle_2();\n        this.ballon = cc.instantiate(this.prfBallon).getComponent(Ballon).node\n        this.ballon.y = -500;\n        this.nBallon.addChild(this.ballon);\n        this.genObstacle();\n        this.node.on(cc.Node.EventType.TOUCH_START,this.onTouchStart, this);\n\n       \n    }\n\n    start() {\n\n    }\n\n    createObstacle(node: cc.Node) {\n\n        for (let i = 0; i < 2; i++) {\n            let index = Math.floor(Math.random() * this.listPrfObstacle.length);\n            let obstacle = cc.instantiate(this.listPrfObstacle[index]);\n            let obstacleComponent = obstacle.getComponent(obstacleManager);\n            if (obstacleComponent) {\n                obstacle = obstacleComponent.node;\n            }\n            obstacle.y = -340 + i * 680;\n            node.addChild(obstacle);\n        }\n    }\n\n    genObstacle() {\n        for(let i = 0; i < this.listBg.length; i++) {\n            this.createObstacle(this.listBg[i]);\n        }\n    }\n    onTouchStart() {\n        this.startGame();\n    }\n\n    startGame() {\n        if(!this.isFirstTouch) {\n            this.isFirstTouch = true;\n        }else {\n            this.fall();\n        }\n    }\n\n    fall() {\n        // this.ballon.setPosition(this.ballon.position.x, this.ballon.position.y - 80,0);\n        cc.tween(this.ballon)\n        .by(0.2, { y: -80})\n        .start();\n    }\n   \n\n    gameOver() {\n        console.log(\"Thua con me may roi \");\n    }\n\n    update(dt) {\n        if(this.isFirstTouch) {\n            this.ballon.setPosition(this.ballon.position.x,this.ballon.position.y + 180 * dt,0);\n        }\n    }\n    // genBackGround() {\n    //     console.log(\"sadasd\");\n    //     let bg = cc.instantiate(this.prfBackGround).getComponent(BackGround).node\n    //     bg.y = 1900;\n\n    //     this.nBgGame.addChild(bg);\n\n    // }\n}\n"]}