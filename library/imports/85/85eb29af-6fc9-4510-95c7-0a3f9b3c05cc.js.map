{"version":3,"sources":["assets/InfiniteHeights/scripts/Game/InfiniteHeights.ObstacleManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport GameView from \"./InfiniteHeights.GameView\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class obstacleManager extends cc.Component {\n\n    @property\n    idPrf: number = 0;\n    speed: number = 150;\n    speedAngle = 70;\n    @property(cc.Node)\n    listNode: cc.Node[] = [];\n    angle = 0;\n    private isMovingRight: boolean = true;\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n        if (this.idPrf == 1) {\n            console.log(\"Node: \", this.listNode);\n        }\n\n    }\n\n    start() {\n\n    }\n\n\n    update(dt) {\n        switch (this.idPrf) {\n            case 0:\n                let node = this.listNode[0];\n                if (node) {\n                    if (this.isMovingRight) {\n                        node.x += this.speed * dt;\n                        // Nếu node chạm biên phải của màn hình, thay đổi hướng di chuyển\n                        if (node.x >= 200) {\n                            this.isMovingRight = false;\n                        }\n                    } else {\n                        node.x -= this.speed * dt;\n                        // Nếu node chạm biên trái của màn hình, thay đổi hướng di chuyển\n                        if (node.x <= -200) {\n                            this.isMovingRight = true;\n                        }\n                    }\n                }\n                break;\n            case 1:\n                if (this.listNode.length >= 2) {\n                    let node1 = this.listNode[0];\n                    let node2 = this.listNode[1];\n\n                    // Node 1 di chuyển\n                    if (this.isMovingRight) {\n                        node1.x += this.speed * dt;\n                        if (node1.x >= 200) {\n                            this.isMovingRight = false;\n                        }\n                    } else {\n                        node1.x -= this.speed * dt;\n                        if (node1.x <= -200) {\n                            this.isMovingRight = true;\n                        }\n                    }\n\n                    // Node 2 di chuyển ngược hướng với node 1\n                    if (this.isMovingRight) {\n                        node2.x -= this.speed * dt;\n                        if (node2.x <= -200) {\n                            this.isMovingRight = true;\n                        }\n                    } else {\n                        node2.x += this.speed * dt;\n                        if (node2.x >= 200) {\n                            this.isMovingRight = false;\n                        }\n                    }\n                }\n                break;\n            case 2:\n                if (this.listNode.length >= 2) {\n                    let node1 = this.listNode[0];\n                    let node2 = this.listNode[1];\n\n                    if (this.isMovingRight) {\n                        node1.x += this.speed * dt;\n                        node2.x += this.speed * dt; // Node 2 di chuyển cùng hướng với node 1\n                        if (node1.x >= 200 || node2.x >= 200) {\n                            this.isMovingRight = false;\n                        }\n                    } else {\n                        node1.x -= this.speed * dt;\n                        node2.x -= this.speed * dt; // Node 2 di chuyển cùng hướng với node 1\n                        if (node1.x <= -200 || node2.x <= -200) {\n                            this.isMovingRight = true;\n                        }\n                    }\n                }\n                break;\n            case 3:\n                if (this.listNode.length >= 3) {\n                    let node1 = this.listNode[0];\n                    let node2 = this.listNode[1];\n                    let node3 = this.listNode[2];\n\n                    if (this.isMovingRight) {\n                        node1.x += this.speed * dt;\n                        node2.x += this.speed * dt;\n                        node3.x += this.speed * dt;\n                        if (node3.x >= 300) {\n                            this.isMovingRight = false;\n                        }\n                    } else {\n                        node1.x -= this.speed * dt;\n                        node2.x -= this.speed * dt;\n                        node3.x -= this.speed * dt;\n                        if (node1.x <= -300) {\n                            this.isMovingRight = true;\n                        }\n                    }\n                }\n                break;\n            case 4:\n                if (this.listNode.length) {\n                    let node = this.listNode[0];\n                    if (node) {\n\n                        if (this.isMovingRight) {\n                            node.x += this.speed * dt;\n                            if (node.x >= 200) {\n                                this.isMovingRight = false;\n                            }\n                        } else {\n                            node.x -= this.speed * dt;\n                            if (node.x <= -200) {\n                                this.isMovingRight = true;\n                            }\n                        }\n                    }\n\n                }\n                break;\n            case 5:\n                if (this.listNode.length >= 2) {\n                    let node1 = this.listNode[0];\n                    let node2 = this.listNode[1];\n\n                    // Tăng giá trị góc quay dựa trên thời gian và tốc độ\n                    node1.angle += this.speedAngle * dt;\n\n                    // Giảm giá trị góc quay của node2 để nó quay ngược lại\n                    node2.angle -= this.speedAngle * dt;\n\n                    // Giới hạn giá trị góc quay trong khoảng 0 đến 360 độ\n                    if (node1.angle >= 360) {\n                        node1.angle -= 360;\n                    }\n                    if (node2.angle >= 360) {\n                        node2.angle -= 360;\n                    }\n\n                    if (node1.angle < 0) {\n                        node1.angle += 360;\n                    }\n                    if (node2.angle < 0) {\n                        node2.angle += 360;\n                    }\n                }\n                break;\n\n            case 6:\n                if (this.listNode.length) {\n                    let node = this.listNode[0];\n                    node.angle += this.speedAngle * dt;\n                }\n                break;\n            case 7:\n                if (this.listNode.length) {\n                    let node = this.listNode[0];\n                    node.angle += this.speedAngle * dt;\n                }\n                break;\n\n            case 8:\n                if (this.listNode.length) {\n                    let node = this.listNode[0];\n                    node.angle += this.speedAngle * dt;\n                }\n                break;\n            default:\n\n                break;\n        }\n    }\n\n\n\n}\n\n\n"]}