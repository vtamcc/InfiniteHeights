{"version":3,"sources":["assets/InfiniteHeights/scripts/Game/InfiniteHeights.ObstacleManager.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;;;;;;;;;;;;;;;;;;;;;AAE5E,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAA6C,mCAAY;IAAzD;QAAA,qEA6CC;QA1CG,WAAK,GAAW,CAAC,CAAC;QAClB,WAAK,GAAW,GAAG,CAAC;QAEpB,cAAQ,GAAc,EAAE,CAAC;QACjB,mBAAa,GAAY,IAAI,CAAC;;IAsC1C,CAAC;IArCG,wBAAwB;IAExB,gCAAM,GAAN;QACI,IAAG,IAAI,CAAC,KAAK,IAAI,CAAC,EAAE;YAChB,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;SACxC;IACL,CAAC;IAED,+BAAK,GAAL;IAEA,CAAC;IAED,gCAAM,GAAN,UAAO,EAAE;QACL,QAAQ,IAAI,CAAC,KAAK,EAAE;YAChB,KAAK,CAAC;gBACF,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAC5B,IAAI,IAAI,EAAE;oBACN,IAAI,IAAI,CAAC,aAAa,EAAE;wBACpB,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;wBAC1B,iEAAiE;wBACjE,IAAI,IAAI,CAAC,CAAC,IAAI,GAAG,EAAE;4BACf,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;yBAC9B;qBACJ;yBAAM;wBACH,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;wBAC1B,iEAAiE;wBACjE,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;4BAChB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;yBAC7B;qBACJ;iBACJ;gBACD,MAAM;YAEV;gBACI,MAAM;SACb;IACL,CAAC;IAzCD;QADC,QAAQ;kDACS;IAGlB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;qDACO;IANR,eAAe;QADnC,OAAO;OACa,eAAe,CA6CnC;IAAD,sBAAC;CA7CD,AA6CC,CA7C4C,EAAE,CAAC,SAAS,GA6CxD;kBA7CoB,eAAe","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class obstacleManager extends cc.Component {\n\n    @property\n    idPrf: number = 0;\n    speed: number = 150;\n    @property(cc.Node)\n    listNode: cc.Node[] = [];\n    private isMovingRight: boolean = true;\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n        if(this.idPrf == 1) {\n            console.log(\"Node: \", this.listNode);\n        }\n    }\n\n    start() {\n\n    }\n\n    update(dt) {\n        switch (this.idPrf) {\n            case 0:\n                let node = this.listNode[0];\n                if (node) {\n                    if (this.isMovingRight) {\n                        node.x += this.speed * dt;\n                        // Nếu node chạm biên phải của màn hình, thay đổi hướng di chuyển\n                        if (node.x >= 200) {\n                            this.isMovingRight = false;\n                        }\n                    } else {\n                        node.x -= this.speed * dt;\n                        // Nếu node chạm biên trái của màn hình, thay đổi hướng di chuyển\n                        if (node.x <= -200) {\n                            this.isMovingRight = true;\n                        }\n                    }\n                }\n                break;\n\n            default:\n                break;\n        }\n    }\n}\n"]}