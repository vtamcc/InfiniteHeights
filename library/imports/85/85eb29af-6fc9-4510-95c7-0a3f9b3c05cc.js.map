{"version":3,"sources":["assets\\InfiniteHeights\\scripts\\Game\\InfiniteHeights.ObstacleManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport GameView from \"./InfiniteHeights.GameView\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class obstacleManager extends cc.Component {\r\n\r\n    @property\r\n    idPrf: number = 0;\r\n    speed: number = 150;\r\n    speedAngle = 70;\r\n    @property(cc.Node)\r\n    listNode: cc.Node[] = [];\r\n    angle = 0;\r\n    private isMovingRight: boolean = true;\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        \r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n\r\n    update(dt) {\r\n        if(GameView.instance.isGameOver) return;\r\n        switch (this.idPrf) {\r\n            case 0:\r\n                let node = this.listNode[0];\r\n                if (node) {\r\n                    if (this.isMovingRight) {\r\n                        node.x += this.speed * dt;\r\n                        // Nếu node chạm biên phải của màn hình, thay đổi hướng di chuyển\r\n                        if (node.x >= 200) {\r\n                            this.isMovingRight = false;\r\n                        }\r\n                    } else {\r\n                        node.x -= this.speed * dt;\r\n                        // Nếu node chạm biên trái của màn hình, thay đổi hướng di chuyển\r\n                        if (node.x <= -200) {\r\n                            this.isMovingRight = true;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            case 1:\r\n                if (this.listNode.length >= 2) {\r\n                    let node1 = this.listNode[0];\r\n                    let node2 = this.listNode[1];\r\n\r\n                    // Node 1 di chuyển\r\n                    if (this.isMovingRight) {\r\n                        node1.x += this.speed * dt;\r\n                        if (node1.x >= 200) {\r\n                            this.isMovingRight = false;\r\n                        }\r\n                    } else {\r\n                        node1.x -= this.speed * dt;\r\n                        if (node1.x <= -200) {\r\n                            this.isMovingRight = true;\r\n                        }\r\n                    }\r\n\r\n                    // Node 2 di chuyển ngược hướng với node 1\r\n                    if (this.isMovingRight) {\r\n                        node2.x -= this.speed * dt;\r\n                        if (node2.x <= -200) {\r\n                            this.isMovingRight = true;\r\n                        }\r\n                    } else {\r\n                        node2.x += this.speed * dt;\r\n                        if (node2.x >= 200) {\r\n                            this.isMovingRight = false;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            case 2:\r\n                if (this.listNode.length >= 2) {\r\n                    let node1 = this.listNode[0];\r\n                    let node2 = this.listNode[1];\r\n\r\n                    if (this.isMovingRight) {\r\n                        node1.x += this.speed * dt;\r\n                        node2.x += this.speed * dt; // Node 2 di chuyển cùng hướng với node 1\r\n                        if (node1.x >= 200 || node2.x >= 200) {\r\n                            this.isMovingRight = false;\r\n                        }\r\n                    } else {\r\n                        node1.x -= this.speed * dt;\r\n                        node2.x -= this.speed * dt; // Node 2 di chuyển cùng hướng với node 1\r\n                        if (node1.x <= -200 || node2.x <= -200) {\r\n                            this.isMovingRight = true;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            case 3:\r\n                if (this.listNode.length >= 3) {\r\n                    let node1 = this.listNode[0];\r\n                    let node2 = this.listNode[1];\r\n                    let node3 = this.listNode[2];\r\n\r\n                    if (this.isMovingRight) {\r\n                        node1.x += this.speed * dt;\r\n                        node2.x += this.speed * dt;\r\n                        node3.x += this.speed * dt;\r\n                        if (node3.x >= 300) {\r\n                            this.isMovingRight = false;\r\n                        }\r\n                    } else {\r\n                        node1.x -= this.speed * dt;\r\n                        node2.x -= this.speed * dt;\r\n                        node3.x -= this.speed * dt;\r\n                        if (node1.x <= -300) {\r\n                            this.isMovingRight = true;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            case 4:\r\n                if (this.listNode.length) {\r\n                    let node = this.listNode[0];\r\n                    if (node) {\r\n\r\n                        if (this.isMovingRight) {\r\n                            node.x += this.speed * dt;\r\n                            if (node.x >= 200) {\r\n                                this.isMovingRight = false;\r\n                            }\r\n                        } else {\r\n                            node.x -= this.speed * dt;\r\n                            if (node.x <= -200) {\r\n                                this.isMovingRight = true;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case 5:\r\n                if (this.listNode.length >= 2) {\r\n                    let node1 = this.listNode[0];\r\n                    let node2 = this.listNode[1];\r\n\r\n                    // Tăng giá trị góc quay dựa trên thời gian và tốc độ\r\n                    node1.angle += this.speedAngle * dt;\r\n\r\n                    // Giảm giá trị góc quay của node2 để nó quay ngược lại\r\n                    node2.angle -= this.speedAngle * dt;\r\n\r\n                    // Giới hạn giá trị góc quay trong khoảng 0 đến 360 độ\r\n                    if (node1.angle >= 360) {\r\n                        node1.angle -= 360;\r\n                    }\r\n                    if (node2.angle >= 360) {\r\n                        node2.angle -= 360;\r\n                    }\r\n\r\n                    if (node1.angle < 0) {\r\n                        node1.angle += 360;\r\n                    }\r\n                    if (node2.angle < 0) {\r\n                        node2.angle += 360;\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case 6:\r\n                if (this.listNode.length) {\r\n                    let node = this.listNode[0];\r\n                    node.angle += this.speedAngle * dt;\r\n                }\r\n                break;\r\n            case 7:\r\n                if (this.listNode.length) {\r\n                    let node = this.listNode[0];\r\n                    node.angle += this.speedAngle * dt;\r\n                }\r\n                break;\r\n\r\n            case 8:\r\n                if (this.listNode.length) {\r\n                    let node = this.listNode[0];\r\n                    node.angle += this.speedAngle * dt;\r\n                }\r\n                break;\r\n            default:\r\n\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n"]}