{"version":3,"sources":["assets\\InfiniteHeights\\scripts\\InfiniteHeights.GameManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport Ballon from \"./Game/InfiniteHeights.Ballon\";\r\nimport { Global } from \"./InfiniteHeights.Global\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class GameManager extends cc.Component {\r\n\r\n    public static instance: GameManager = null;\r\n    @property(cc.Prefab)\r\n    prfGameView: cc.Prefab = null;\r\n\r\n    @property(cc.Node)\r\n    nListNodeRank: cc.Node[] = [];\r\n\r\n    @property(cc.Label)\r\n    lbtest: cc.Label = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    listSpfBallon: cc.SpriteFrame[] = [];\r\n\r\n    @property(cc.PageView)\r\n    pageView: cc.PageView = null;\r\n\r\n    @property(cc.Prefab)\r\n    ballonPrefabs: cc.Prefab = null;\r\n\r\n    @property(cc.Node)\r\n    nListBallon: cc.Node[] = [];\r\n    indexBallon = 1;\r\n    onLoad() {\r\n        GameManager.instance = this;\r\n        this.updateRank(this.nListNodeRank);\r\n        //this.updateActive(Global.score);\r\n        \r\n    }\r\n    start() {\r\n\r\n    }\r\n    populatePages() {\r\n\r\n        //this.updatePageView();\r\n\r\n    }\r\n\r\n    onNextPage() {\r\n\r\n    }\r\n    updateRank(listNodeLabel: cc.Node[]) {\r\n        Global.dataScore = JSON.parse(cc.sys.localStorage.getItem(\"scores\")) || [];\r\n        console.log(\"Diem luu ne \", Global.dataScore);\r\n        if (Global.dataScore.length === 0) {\r\n            console.log(\"Mảng scores rỗng, ẩn tất cả các node.\");\r\n            listNodeLabel.forEach(node => {\r\n                node.active = false;\r\n            });\r\n        } else {\r\n            listNodeLabel.forEach((node, index) => {\r\n                //console.log(\"index \", index);\r\n                //console.log(\"diem \", Global.dataScore)\r\n                if (index < Global.dataScore.length) {\r\n                    node.active = true;\r\n                    node.getComponent(cc.Label).string = Global.dataScore[index] + ' ';\r\n                } else {\r\n                    node.active = false;\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    removeCache() {\r\n        cc.sys.localStorage.clear();\r\n    }\r\n\r\n\r\n    clickPlay() {\r\n        let gameView = cc.instantiate(this.prfGameView)\r\n        this.node.addChild(gameView);\r\n    }\r\n    // update (dt) {}\r\n}\r\n"]}